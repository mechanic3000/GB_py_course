"""
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится на экран.

Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При вводе пользователем
очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться.
"""


class IsNumber(Exception):
    def __init__(self, message="Введено не число"):
        self.message = message


def is_number(n):
    try:
        float(n)
        return True
    except ValueError:
        return False


numbers_list = []
while True:
    try:
        a = input("Введи число (для остановки введи stop): ")
        if a == "stop":
            break
        elif not is_number(a):
            raise IsNumber()
        else:
            numbers_list.append(a)
    except IsNumber:
        print("Введено не число!")

print(numbers_list)
